
# These are written from the perspective of one of the per-variant
# subdirs of this directory.

.PHONY: default clean run

default: 
	echo "Doing nothing during 'compile' phase... procrastinating until run."

#Build with ubiprof finstrument baeckend
build-ubiprof:
	  cd ..;./setup.sh 
		cd ../instrumented; make clean;\
		  make CFLAGS='$(OPTLEVEL) -finstrument-functions -fno-optimize-sibling-calls' LDFLAGS='-L../../../build -lrt -lubiprof'
			
#Build with finstrument
build-finstrument:
	cd ..;./setup.sh finstrument
	cd ../instrumented;\
		make clean;\
		make CFLAGS='-O2 -finstrument-functions -fno-optimize-sibling-calls' LDFLAGS='-L../../../build -lubiprof'

# Build with icc and profiling:
build-prof:
	echo -e "Building gzip with gprof enabled..."
	$(MAKE) CFLAGS='-O2 -pg' build-shared

build-dynaprof:
	cd ..; ./setup.sh dynaprof 
	echo -e "\nInstrumenting h264..."
	cd ..; ./instrument.sh
	echo -e "\nBuilding gzip with instrumentation...";
	cd ../instrumented;\
		make clean;\
		make CLFAGS='$(OPTLEVEL)' LDFLAGS='libdynaprof.a libzca-toggle.a -lrt -lelf -lpthread' 

build-plain:
	# $(MAKE) CFLAGS='$(OPTLEVEL)' build-shared
	(cd ..; ./setup.sh)
	(cd ../instrumented && make clean)
	(cd ../instrumented && time make CFLAGS="$(CFLAGS)" LDFLAGS='-lm')


build-shared:
	(cd ..; ./setup.sh)
	(cd ../instrumented && make clean)
	(cd ../instrumented && time make CFLAGS="$(CFLAGS)")

run-common: 
	(cd ../instrumented; LD_LIBRARY_PATH=../../../build/:$(LD_LIBRARY_PATH) /usr/bin/time -f "SELFTIMED %e\nuser %U\nsys %S\n" ./h264ref -d test/input/foreman_test_encoder_baseline.cfg) 2>&1
#	(cd ../instrumented && ./h264ref -d test/input/foreman_test_encoder_baseline.cfg)

# We don't really need to clean, because we do a fresh "configure" on each build.
clean:
